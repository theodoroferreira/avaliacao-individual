openapi: 3.0.1
info:
  title: Ms-Order
  description: O Ms Order tem a responsabilidade de armazenar e gerenciar dados dos pedidos.
  termsOfService: https://example.com/terms/
  contact:
    name: Theodoro Ferreira
    url: https://github.com/theodoroferreira
    email: theogferreira@outlook.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
externalDocs:
  description: Repository on GitHub
  url: https://github.com/theodoroferreira/avaliacao-individual
servers:
  - url: http://localhost:8081/api
    description: Base URL to access the entire application
paths:
  /orders/{id}:
    get:
      tags:
        - order-controller
      operationId: findById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
    put:
      tags:
        - order-controller
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
    delete:
      tags:
        - order-controller
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /orders:
    get:
      tags:
        - order-controller
      operationId: findAll
      parameters:
        - name: cpf
          in: query
          required: false
          schema:
            type: string
        - name: totalValue
          in: query
          required: false
          schema:
            type: number
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageableDTO'
    post:
      tags:
        - order-controller
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDTO'
  /items/{id}:
    patch:
      tags:
        - item-controller
      operationId: patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDTO'
components:
  schemas:
    AddressRequestDTO:
      type: object
      properties:
        cep:
          type: string
        numero:
          type: string
    Item:
      required:
        - creationDate
        - description
        - expirationDate
        - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          pattern: ^([a-zA-ZãÃéÉíÍóÓêÊôÔáÁ\s])+$
          type: string
        creationDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        value:
          type: number
        description:
          type: string
    OrderRequestDTO:
      type: object
      properties:
        cpf:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        address:
          $ref: '#/components/schemas/AddressRequestDTO'
    Address:
      type: object
      properties:
        id:
          type: integer
          format: int64
        cep:
          type: string
        logradouro:
          type: string
        numero:
          type: string
        bairro:
          type: string
        localidade:
          type: string
        uf:
          type: string
    OrderDTO:
      type: object
      properties:
        cpf:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        totalValue:
          type: number
        address:
          $ref: '#/components/schemas/Address'
    ItemDTO:
      type: object
      properties:
        name:
          type: string
        creationDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        value:
          type: number
        description:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Order:
      type: object
      properties:
        orderId:
          type: integer
          format: int64
        cpf:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Item'
        totalValue:
          type: number
        address:
          $ref: '#/components/schemas/Address'
    PageableDTO:
      type: object
      properties:
        numberOfElements:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        orderList:
          type: array
          items:
            $ref: '#/components/schemas/Order'
